name: 同步完整版 IPTV 源（通过 NoobIPTV.sh）

# 定时触发：每天 UTC 17:00 → 相当于北京时间/新加坡时间 01:00
# 也支持手动触发（用于测试）
on:
  schedule:
    - cron: '0 17 * * *'
  workflow_dispatch:

jobs:
  fetch-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 签出当前仓库（iptv-sources）到 Runner
      - name: Checkout this repository (完整历史)
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      # 2. 克隆 YanG-1989/m3u 仓库到子目录 m3u-repo
      - name: Checkout m3u generator repository
        uses: actions/checkout@v4
        with:
          # 注意：这里的 repository 要改成 YanG-1989/m3u
          # 这样会把对方仓库签出到本地 m3u-repo 目录
          repository: YanG-1989/m3u
          path: m3u-repo
          fetch-depth: 1

      # 3. 进入 m3u-repo，给脚本加执行权限并运行，让它生成 Gather.m3u
      - name: Run NoobIPTV.sh to generate full Gather.m3u
        working-directory: m3u-repo
        run: |
          # 确保脚本可执行
          chmod +x NoobIPTV.sh

          # 运行脚本，让它输出完整的 Gather.m3u
          # 如果 NoobIPTV.sh 支持带参数输出，可以加 --export 或类似
          # 大多数版本直接执行后会在当前目录生成 Gather.m3u
          ./NoobIPTV.sh

          # （可选）调试：列一下生成目录，确认文件已生成
          echo "m3u-repo 目录下文件："
          ls -1

      # 4. 把生成的 Gather.m3u 拷贝回到根目录，并生成纯 URL 的 TXT
      - name: Copy Gather.m3u and optionally make TXT
        run: |
          # 将 m3u-repo/Gather.m3u 拷贝到工作区根目录，重命名为 FullGather.m3u
          cp m3u-repo/Gather.m3u ./FullGather.m3u

          # （可选）如果想要一个只包含流媒体 URL 的 TXT，接着执行：
          grep -v "^#EXT" FullGather.m3u > FullGather.txt || true

          # 调试输出，确认当前目录下的文件
          echo "工作区根目录："
          ls -1 .

      # 5. 把根目录的 FullGather.m3u（和 FullGather.txt）推送到 gh-pages
      - name: 部署到 gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./
          keep_files: true
