name: 同步完整版 IPTV 源（无交互）

# 定时触发：每天 UTC 17:00 → 北京/新加坡时间 01:00
# 支持手动触发以便测试
on:
  schedule:
    - cron: '0 17 * * *'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 签出当前仓库（含完整历史），以便后面能推送到 gh-pages
      - name: Checkout this repository (完整历史)
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      # 2. 克隆上游 m3u 仓库到工作区子目录 m3u-repo，仅需最新代码即可
      - name: Checkout YanG-1989/m3u 仓库
        uses: actions/checkout@v4
        with:
          repository: YanG-1989/m3u
          path: m3u-repo
          fetch-depth: 1

      # 3. 进入 m3u-repo，给 NoobIPTV.sh 授予执行权限并用 --export 模式无交互地导出完整版 Gather.m3u
      - name: Run NoobIPTV.sh in non-interactive (--export)
        working-directory: m3u-repo
        run: |
          chmod +x NoobIPTV.sh

          # --export 参数会让脚本直接输出完整版 M3U 到 stdout
          # 这里把它重定向到 m3u-repo/Gather.m3u
          ./NoobIPTV.sh --export > Gather.m3u

          # 调试输出：确认在 m3u-repo 下确实生成了 Gather.m3u
          echo "=== m3u-repo 目录下文件 ==="
          ls -1 .

      # 4. 将生成的 Gather.m3u 拷贝到根目录，并生成纯 URL 的 FullGather.txt（可选）
      - name: Copy and optionally create TXT
        run: |
          cp m3u-repo/Gather.m3u ./FullGather.m3u

          # 如果想要一个只包含链接的 TXT 文件：
          grep -v "^#EXT" FullGather.m3u > FullGather.txt || true

          # 调试：查看根目录下是否有两个文件
          echo "=== 根目录下文件 ==="
          ls -1 .

      # 5. 把 FullGather.m3u（和 FullGather.txt）推送到 gh-pages 分支
      - name: 部署到 gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./
          keep_files: true
